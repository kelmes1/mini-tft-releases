name: Notify over MQTT when new bin file release is published

on:
  push:
    branches: [ main ]
    paths: [ "mini-tft.bin" ]

jobs:
  mqtt-notify:
    runs-on: [self-hosted, proxmox]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Read and validate release tag
        id: get_tag
        run: |
          set -euo pipefail

          # Try version.txt first (created by build-and-release)
          if [ -f version.txt ]; then
            tag=$(sed -n '1p' version.txt | tr -d '[:space:]')
            echo "Found tag in version.txt: $tag"
          else
            # Try manifest.json next
            if [ -f manifest.json ]; then
              # Extract "version": "..." using a safe grep/sed method (no jq required)
              tag=$(grep -oP '"version"\s*:\s*"\K[^"]+' manifest.json || true)
              tag="$(echo -n "$tag" | tr -d '[:space:]')"
              if [ -n "$tag" ]; then
                echo "Found tag in manifest.json: $tag"
              fi
            fi

            # Fallback: try to find a vX.Y.Z token in the latest commit message
            if [ -z "${tag:-}" ]; then
              msg=$(git --no-pager log -1 --pretty=%B || echo "")
              tag=$(echo "$msg" | grep -oE 'v[0-9]+\.[0-9]+\.[0-9]+(-[0-9A-Za-z.-]+)?(\+[0-9A-Za-z.-]+)?' | head -n1 || true)
              if [ -n "$tag" ]; then
                echo "Found tag in commit message: $tag"
              fi
            fi
          fi

          if [ -z "${tag:-}" ]; then
            echo "ERROR: No tag found (checked version.txt, manifest.json, and commit message). Aborting."
            exit 1
          fi

          # Semver validation (allow optional leading 'v')
          if ! [[ "$tag" =~ ^v?[0-9]+\.[0-9]+\.[0-9]+(-[0-9A-Za-z.-]+)?(\+[0-9A-Za-z.-]+)?$ ]]; then
            echo "ERROR: Tag '$tag' is not a semver (expected like v1.2.3). Aborting."
            exit 1
          fi

          echo "tag=$tag" >> $GITHUB_OUTPUT
          echo "RELEASE_TAG=$tag" >> $GITHUB_ENV

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install mqtt package
        run: npm install mqtt --no-audit --no-fund

      - name: Debug connectivity (optional)
        run: |
          echo "curl debug (from self-hosted runner):"
          curl -I -sS https://$(echo ${{ secrets.MQTT_HOST }} | sed -E 's#^wss://##; s#/.*$##')/mqtt || true

      - name: Run MQTT publisher
        env:
          MQTT_HOST: ${{ secrets.MQTT_HOST }}
          MQTT_PATH: ${{ secrets.MQTT_PATH }}
          MQTT_USER: ${{ secrets.MQTT_USER }}
          MQTT_PASSWORD: ${{ secrets.MQTT_PASSWORD }}
          CF_ACCESS_CLIENT_ID: ${{ secrets.CF_ACCESS_CLIENT_ID }}
          CF_ACCESS_CLIENT_SECRET: ${{ secrets.CF_ACCESS_CLIENT_SECRET }}
          RELEASE_TAG: ${{ steps.get_tag.outputs.tag }}
          MQTT_ATTEMPTS: 4
          MQTT_RETRY_DELAY_MS: 3000
          MQTT_CONNECT_TIMEOUT_MS: 15000
        run: |
          node .github/workflows/send-mqtt.js
